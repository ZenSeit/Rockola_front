{"version":3,"sources":["Componentes/AddCancion.js","Componentes/EditCancion.js","Componentes/formcancion.js","Componentes/Delcancion.js","Componentes/Imagenes/bannerrockola.png","Componentes/ListarCanciones.js","Componentes/RegisterUser.js","Componentes/login.js","App.js","reportWebVitals.js","index.js"],"names":["Cerrarsesion","color","onClick","e","localStorage","clear","window","location","reload","Editcan","cant","string","Object","values","stringcan","useState","id","setId","nom","setNomcan","autor","setArtcan","gen","setGen","enlace","setEnla","comentario","setComen","nickname","usercanr","setUser","mod","setMod","cambio","EditarCancion","a","editcan","console","log","preventDefault","fetch","method","headers","token","body","JSON","stringify","then","response","status","alert","isOpen","xmlns","width","height","fill","class","viewBox","className","d","onValidSubmit","name","label","placeholder","value","onChange","target","type","required","validate","errorMessage","minLength","maxLength","pattern","selected","disabled","hidden","Formcan","Enviarcancion","newcan","Delcan","can","ListarCanciones","cancion","setCancion","useEffect","res","json","result","src","bannerrockola","alt","scope","map","href","FormUser","setNick","nombre","setNom","email","setEmail","genero","password","setPass","EnviarUsuario","newuser","rest","text","Login","EnviarDatos","Usuario","resp","App","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c092c089.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nexport default function Cerrarsesion() {\r\n\r\n    \r\n    \r\n    \r\n    const Cerrar = (e) => {\r\n        localStorage.clear();\r\n        window.location.reload(false);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Button color=\"dark\" onClick={Cerrar}>Cerrar Sesion</Button>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input } from 'reactstrap';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\n\r\n\r\nexport default function Editcan(cant) {\r\n\r\n\r\n    const string =Object.values(cant);\r\n    const stringcan=Object.values(string[0])\r\n\r\n\r\n\r\n    const [id, setId]=useState(stringcan[0]);\r\n    const [nom, setNomcan] = useState(stringcan[1]);\r\n    const [autor, setArtcan] = useState(stringcan[2]);\r\n    const [gen, setGen] = useState(stringcan[3]);\r\n    const [enlace, setEnla] = useState(stringcan[4]);\r\n    const [comentario, setComen] = useState(stringcan[5]);\r\n    const [usercanr, setUser] = useState(localStorage.nickname);\r\n    const [mod, setMod] = useState(false);\r\n    const cambio = () => setMod(!mod);\r\n\r\n\r\n\r\n    const EditarCancion = async (e) => {\r\n        setId(stringcan[0]);\r\n        setUser(localStorage.nickname);\r\n        const editcan = { id, nom, autor, gen, enlace, comentario, usercanr }\r\n        console.log(editcan)\r\n        e.preventDefault();\r\n        await fetch(\"https://rockolamin.herokuapp.com/acan\", {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.token\r\n            },\r\n            body: JSON.stringify(editcan)\r\n        }).then(function(response){\r\n            if(response.status===200){\r\n                alert(\"Cancion editada con exito\")\r\n                window.location.reload(false);\r\n            }else{alert(\"No se pudo editar la cancion\")}\r\n            \r\n        });\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n\r\n                <Button color=\"warning\" onClick={cambio}>Editar cancion</Button>\r\n            </div>\r\n            <Modal isOpen={mod}>\r\n                <ModalHeader>\r\n                    Editar canción\r\n\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\" onClick={cambio} className=\"cerrarbtn\">\r\n                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\" />\r\n                    </svg>\r\n\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                <AvForm onValidSubmit={EditarCancion}>\r\n                        <AvField name=\"cancion\" label=\"Nombre cancion\" placeholder=\"Escribe el nombre de la cancion\" value={nom} onChange={(e) => setNomcan(e.target.value)} type=\"text\" required validate={{\r\n                            required: { value: true, errorMessage: 'Ingresa el nombre de la cancion' },\r\n                            minLength: { value: 1, errorMessage: 'El nombre de la cancion debe contener entre 1 y 30 caracteres' },\r\n                            maxLength: { value: 30, errorMessage: 'El nombre de la cancion debe contener entre 1 y 30 caracteres' }\r\n                        }} />\r\n                        <AvField name=\"autor\" label=\"Artista\" placeholder=\"Ingresa el artista\" value={autor} onChange={(e) => setArtcan(e.target.value)} type=\"text\" validate={{\r\n                            required: { value: true, errorMessage: 'Artista' },\r\n                            pattern: { value: '^[a-zA-Z0-9_ ]*$', errorMessage: 'El artista solo puede contener letras y numeros' },\r\n                            minLength: { value: 2, errorMessage: 'Tu nombre debe contener al menos 2 caracteres' },\r\n                            maxLength: { value: 40, errorMessage: 'Nombre demasiado largo' }\r\n                        }} />\r\n                        <AvField type=\"select\" name=\"genero\" label=\"Genero de la cancion\" value={gen} onChange={(e) => setGen(e.target.value)} required>\r\n                            <option value=\"\" selected disabled hidden>Selecciona un genero</option>\r\n                            <option>Reggae</option>\r\n                            <option>Rock</option>\r\n                            <option>Balada</option>\r\n                            <option>Bachata</option>\r\n                            <option>Salsa</option>\r\n                            <option>Reggaeton</option>\r\n                            <option>House</option>\r\n                            <option>Metal</option>\r\n                            <option>Merengue</option>\r\n                            <option>Ranchera</option>\r\n                            <option>Vallenato</option>\r\n                            <option>R&B</option>\r\n                            <option>POP</option>\r\n                            <option>Carranga</option>\r\n                            <option>Electronica</option>\r\n                            <option>Rock en español</option>\r\n                            <option>Rap</option>\r\n                            <option>Jazz</option>\r\n                        </AvField>\r\n                        <AvField name=\"enlace\" label=\"Enlace YT\" placeholder=\"Ingresa el enlace de la cancion\" value={enlace} onChange={(e) => setEnla(e.target.value)} type=\"text\" validate={{\r\n                            required: { value: true, errorMessage: 'Ingresa el enlace' },\r\n                            pattern: { value: '(https?://)?(www\\\\.)?(yotu\\\\.be/|youtube\\\\.com/)?((.+/)?(watch(\\\\?v=|.+&v=))?(v=)?)([\\\\w_-]{11})(&.+)?', errorMessage: 'Ingresa un enlace de youtube' }\r\n                        }} />\r\n                        <AvField name=\"comment\" label=\"Comentario\" placeholder=\"Puedes escribir algun comentario\" value={comentario} onChange={(e) => setComen(e.target.value)} type=\"text\" />\r\n\r\n                        <Button color=\"primary\">Submit</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input } from 'reactstrap';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\n\r\nexport default function Formcan() {\r\n\r\n    const [nom, setNomcan] = useState('');\r\n    const [autor, setArtcan] = useState('');\r\n    const [gen, setGen] = useState('');\r\n    const [enlace, setEnla] = useState('');\r\n    const [comentario, setComen] = useState('');\r\n    const [usercanr, setUser] = useState(localStorage.nickname);\r\n    const [mod, setMod] = useState(false);\r\n    const cambio = () => setMod(!mod);\r\n\r\n\r\n    const Enviarcancion = async (e) => {\r\n        setUser(localStorage.nickname);\r\n        const newcan = { nom, autor, gen, enlace, comentario, usercanr }\r\n        console.log(newcan)\r\n        e.preventDefault();\r\n        await fetch(\"https://rockolamin.herokuapp.com/gcan\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.token\r\n            },\r\n            body: JSON.stringify(newcan)\r\n        }).then(function(response){\r\n            if(response.status===200){\r\n                alert(\"Se agregó tu cancion\")\r\n                window.location.reload(false);\r\n            }else{alert(\"La cancion no fue agregada\")}\r\n\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div>\r\n\r\n                <Button color=\"success\" onClick={cambio}>Añadir canción</Button>\r\n            </div>\r\n            <Modal isOpen={mod}>\r\n                <ModalHeader>\r\n                    Añadir canción\r\n\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\" onClick={cambio} className=\"cerrarbtn\">\r\n                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\" />\r\n                    </svg>\r\n\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={Enviarcancion}>\r\n                        <AvField name=\"cancion\" label=\"Nombre cancion\" placeholder=\"Escribe el nombre de la cancion\" value={nom} onChange={(e) => setNomcan(e.target.value)} type=\"text\" required validate={{\r\n                            required: { value: true, errorMessage: 'Ingresa el nombre de la cancion' },\r\n                            minLength: { value: 1, errorMessage: 'El nombre de la cancion debe contener entre 1 y 30 caracteres' },\r\n                            maxLength: { value: 30, errorMessage: 'El nombre de la cancion debe contener entre 1 y 30 caracteres' }\r\n                        }} />\r\n                        <AvField name=\"autor\" label=\"Artista\" placeholder=\"Ingresa el artista\" value={autor} onChange={(e) => setArtcan(e.target.value)} type=\"text\" validate={{\r\n                            required: { value: true, errorMessage: 'Artista' },\r\n                            pattern: { value: '^[a-zA-Z0-9_ ]*$', errorMessage: 'El artista solo puede contener letras y numeros' },\r\n                            minLength: { value: 2, errorMessage: 'Tu nombre debe contener al menos 2 caracteres' },\r\n                            maxLength: { value: 40, errorMessage: 'Nombre demasiado largo' }\r\n                        }} />\r\n                        <AvField type=\"select\" name=\"genero\" label=\"Genero de la cancion\" value={gen} onChange={(e) => setGen(e.target.value)} required>\r\n                            <option value=\"\" selected disabled hidden>Selecciona un genero</option>\r\n                            <option>Reggae</option>\r\n                            <option>Rock</option>\r\n                            <option>Balada</option>\r\n                            <option>Bachata</option>\r\n                            <option>Salsa</option>\r\n                            <option>Reggaeton</option>\r\n                            <option>House</option>\r\n                            <option>Metal</option>\r\n                            <option>Merengue</option>\r\n                            <option>Ranchera</option>\r\n                            <option>Vallenato</option>\r\n                            <option>R&B</option>\r\n                            <option>POP</option>\r\n                            <option>Carranga</option>\r\n                            <option>Electronica</option>\r\n                            <option>Rock en español</option>\r\n                            <option>Rap</option>\r\n                            <option>Jazz</option>\r\n                        </AvField>\r\n                        <AvField name=\"enlace\" label=\"Enlace YT\" placeholder=\"Ingresa el enlace de la cancion\" value={enlace} onChange={(e) => setEnla(e.target.value)} type=\"text\" validate={{\r\n                            required: { value: true, errorMessage: 'Ingresa el enlace' },\r\n                            pattern: { value: '(https?://)?(www\\\\.)?(yotu\\\\.be/|youtube\\\\.com/)?((.+/)?(watch(\\\\?v=|.+&v=))?(v=)?)([\\\\w_-]{11})(&.+)?', errorMessage: 'Ingresa un enlace de youtube' }\r\n                        }} />\r\n                        <AvField name=\"comment\" label=\"Comentario\" placeholder=\"Puedes escribir algun comentario\" value={comentario} onChange={(e) => setComen(e.target.value)} type=\"text\" />\r\n\r\n                        <Button color=\"primary\">Submit</Button>\r\n                    </AvForm>\r\n\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Delcan(can) {\r\n\r\n\r\n    const string =Object.values(can);\r\n    const stringcan=Object.values(string[0])\r\n\r\n\r\n\r\n    const EliminarCan =()=> {\r\n        const id=stringcan[0];\r\n        fetch(\"https://rockolamin.herokuapp.com/dcan/\"+id, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.token\r\n            }\r\n        }).then(function(response){\r\n            if(response.status===200){\r\n                alert(\"Cancion eliminada con exito\")\r\n                window.location.reload(false);\r\n            }else{alert(\"No se pudo eliminar la cancion\")}\r\n            \r\n        });\r\n\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <button type=\"button\" className=\"btn btn-danger\"  onClick={EliminarCan}>Eliminar</button>\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/bannerrockola.dc816b07.png\";","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Editcan from './EditCancion';\r\nimport Formcan from './formcancion';\r\nimport Delcan from './Delcancion';\r\nimport Cerrarsesion from './AddCancion';\r\nimport bannerrockola from './Imagenes/bannerrockola.png';\r\n\r\n\r\nexport default function ListarCanciones() {\r\n\r\n    const [cancion, setCancion] = useState([]);\r\n\r\n    const cargarCanciones = () => {\r\n        fetch(\"https://rockolamin.herokuapp.com/lcan\", {\r\n            method: 'get',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.token\r\n            }\r\n        }).then(res => res.json())\r\n            .then((result\r\n            ) => {\r\n                setCancion(result);\r\n            })\r\n    };\r\n\r\n    useEffect(cargarCanciones, []);\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            \r\n            <div><img src={bannerrockola} className=\"img-fluid\" alt=\"Responsive image\"/></div>\r\n            \r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-10\">\r\n\r\n                        <h2 className=\"mb-3\" id=\"nuestras\"> Nuestras canciones disponibles </h2>\r\n\r\n                        <Formcan />\r\n\r\n                        <div className=\"tabladiv\">\r\n                            <div className=\"tcancion\">\r\n                                <table className=\"table table-dark table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">Nombre</th>\r\n                                            <th scope=\"col\">Artista</th>\r\n                                            <th scope=\"col\">Genero</th>\r\n                                            <th scope=\"col\">Enlace</th>\r\n                                            <th scope=\"col\">Comentario</th>\r\n                                            <th scope=\"col\">Modificado por</th>\r\n                                            <th scope=\"col\">Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            cancion.map(can =>\r\n\r\n                                                <tr>\r\n                                                    <td key={can.id}>{can.nom}</td>\r\n                                                    <td>{can.autor}</td>\r\n                                                    <td>{can.gen}</td>\r\n                                                    <td><a href={can.enlace} target=\"_blank\">Escuchar {can.nom}</a></td>\r\n                                                    <td>{can.comentario}</td>\r\n\r\n                                                    <td>{can.usercanr}</td>\r\n                                                    <td><Editcan cant={can} /><Delcan cant={can} /> </td>\r\n\r\n                                                </tr>\r\n                                            )\r\n\r\n                                        }\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cerrar\"><Cerrarsesion /></div>\r\n        </div>\r\n\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, Input } from 'reactstrap';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\n\r\nexport default function FormUser() {\r\n\r\n    const [nickname, setNick] = useState('');\r\n    const [nombre, setNom] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [genero, setGen] = useState('');\r\n    const [password, setPass] = useState('');\r\n    const [mod, setMod] = useState(false);\r\n    const cambio = () => setMod(!mod);\r\n\r\n\r\n    const EnviarUsuario = async (e) => {\r\n        const newuser = { nickname, nombre, email, genero, password }\r\n        e.preventDefault();\r\n        await fetch(\"https://rockolamin.herokuapp.com/registro\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newuser)\r\n        }).then(async (rest) => {\r\n            const resp = await rest.text();\r\n            if (resp !== \"rep\") {\r\n                alert(\"Te has registrado correctamente\");\r\n                setMod(false);\r\n            } else {\r\n                alert(\"Elige un nickname diferente\");\r\n            }\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div>\r\n\r\n                <Button color=\"success\" onClick={cambio}>Registrarse</Button>\r\n            </div>\r\n            <Modal isOpen={mod}>\r\n                <ModalHeader>\r\n                    Formulario de Registro La Rockola.com\r\n\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\" onClick={cambio} className=\"cerrarbtn\">\r\n                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\" />\r\n                    </svg>\r\n\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div>\r\n                        <AvForm onValidSubmit={EnviarUsuario}>\r\n                            <AvField name=\"nickname\" label=\"Nickname\" placeholder=\"Escribe tu Nickname\" value={nickname} onChange={(e) => setNick(e.target.value)} type=\"text\" required validate={{\r\n                                required: { value: true, errorMessage: 'Ingresa tu Nickname' },\r\n                                pattern: { value: '^[A-Za-z0-9]+$', errorMessage: 'Tu nickname solo puede contener letras y numeros' },\r\n                                minLength: { value: 2, errorMessage: 'Tu nickname debe contener entre 2 y 15 caracteres' },\r\n                                maxLength: { value: 15, errorMessage: 'Tu nickname debe contener entre 2 y 15 caracteres' }\r\n                            }} />\r\n                            <AvField name=\"nombre\" label=\"Nombre\" placeholder=\"Escribe tu nombre\" value={nombre} onChange={(e) => setNom(e.target.value)} type=\"text\" validate={{\r\n                                required: { value: true, errorMessage: 'Ingresa tu nombre' },\r\n                                pattern: { value: '^[a-zA-Z0-9_ ]*$', errorMessage: 'Tu nombre solo puede contener letras' },\r\n                                minLength: { value: 2, errorMessage: 'Tu nombre debe contener al menos 2 caracteres' },\r\n                                maxLength: { value: 40, errorMessage: 'Nombre demasiado largo' }\r\n                            }} />\r\n                            <AvField name=\"email\" label=\"@email\" placeholder=\"Escribe tu email\" value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" validate={{\r\n                                required: { value: true, errorMessage: 'Ingresa tu email' }\r\n                            }} />\r\n                            <AvField type=\"select\" name=\"genero\" label=\"Genero\" value={genero} onChange={(e) => setGen(e.target.value)} required>\r\n                                <option>Masculino</option>\r\n                                <option>Femenino</option>\r\n                                <option>No Binario</option>\r\n                            </AvField>\r\n                            <AvField name=\"password\" label=\"Contraseña\" placeholder=\"Escribe una contraseña\" value={password} onChange={(e) => setPass(e.target.value)} type=\"text\" validate={{\r\n                                required: { value: true, errorMessage: 'Ingresa una contraseña' },\r\n                                pattern: { value: '^[A-Za-z0-9]+$', errorMessage: 'Tu contraseña solo puede contener letras y numeros' },\r\n                                minLength: { value: 4, errorMessage: 'Tu contraseña debe contener entre 4 y 15 caracteres' },\r\n                                maxLength: { value: 15, errorMessage: 'Contraseña demasiada larga' }}}/>\r\n\r\n                            <Button color=\"primary\">Submit</Button>\r\n                        </AvForm>\r\n                    </div>\r\n\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport FormUser from './RegisterUser';\r\nimport bannerrockola from './Imagenes/bannerrockola.png';\r\n\r\nexport default function Login() {\r\n\r\n\r\n    const [nickname, setNick] = useState('')\r\n    const [password, setPass] = useState('')\r\n\r\n    const EnviarDatos = async (e) => {\r\n        const Usuario = { nickname, password }\r\n        e.preventDefault();\r\n        await fetch(\"https://rockolamin.herokuapp.com/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(Usuario)\r\n        }).then(async (rest) => {\r\n            const resp = await rest.text()\r\n            console.log(resp);\r\n            if (resp !== \"mal\") {\r\n                localStorage.token = resp;\r\n                localStorage.nickname = Usuario.nickname;\r\n                alert(\"Has ingresado correctamente\");\r\n                window.location.reload(false);\r\n            } else {\r\n                alert(\"Las credenciales son incorrectas. Por favor intente nuevamente.\");\r\n            }\r\n        }\r\n        );\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div><img src={bannerrockola} className=\"img-fluid\" alt=\"Responsive image\" /></div>\r\n            <div className=\"col-4\">\r\n                <div className=\"registro\">\r\n                    <form>\r\n                        <div className=\"input-group mb-3\">\r\n                            <span className=\"input-group-text\" id=\"basic-addon1\">@</span>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Nickname\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" value={nickname} onChange={(e) => setNick(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Ingresa tu clave\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={password} onChange={(e) => setPass(e.target.value)} />\r\n                            <span className=\"input-group-text\" id=\"basic-addon2\">Password</span>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={EnviarDatos}>Ingresar</button>\r\n                    </form>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"registro\"><FormUser /></div>\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport Cerrarsesion from './Componentes/AddCancion';\nimport ListarCanciones from './Componentes/ListarCanciones';\nimport Login from './Componentes/login';\n\n\nfunction App() {\n\n  <Cerrarsesion/>\n  if(localStorage.key(0)===null){\n      return(\n        <Login/>\n      )\n  }else{\n  return (   \n<ListarCanciones/>\n  );\n}\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}